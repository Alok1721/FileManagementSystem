<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Upload</title>
  <style>
    .drag-area {
      width: 100%;
      height: 200px;
      border: 2px dashed #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      margin-bottom: 20px;
      font-size: 18px;
      color: #888;
      cursor: pointer;
    }
    .drag-area.hover {
      background-color: #f0f0f0;
    }
    .drag-area span {
      font-weight: bold;
    }
    .file-list {
      list-style-type: none;
      padding: 0;
    }
    .file-list li {
      padding: 5px;
      margin: 5px;
      background-color: #f9f9f9;
      border-radius: 5px;
    }
    .file-list a {
      color: #007bff;
      text-decoration: none;
    }
    .file-list a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <h1>Upload File</h1>
  <div class="drag-area" id="drag-area">
    <span>Drag & Drop files here</span> or <span>click to select files</span>
  </div>
  <form id="file-upload-form" action="/upload" method="POST" enctype="multipart/form-data">
    <input type="file" name="file" id="file-input" multiple />
    <button type="submit">Upload</button>
  </form>

  <h2>Uploaded Files</h2>
  <ul>
    <% files.forEach(function(file) { %>
      <li>
        <a href="/download/<%= file %>"><%= file %></a> | 
        <a href="/delete/<%= file %>">Delete</a>
      </li>
    <% }) %>
  </ul>
  <script>
    const dragArea = document.getElementById('drag-area');
    const fileInput = document.getElementById('file-input');
    const fileUploadForm = document.getElementById('file-upload-form');
    let fileList = [];

    const preventDefault = (event) => {
      event.preventDefault();
      event.stopPropagation();
    };
    // Highlight drag area on dragover
    dragArea.addEventListener('dragover', (event) => {
      preventDefault(event);
      dragArea.classList.add('hover');
    });

    // Remove highlight on dragleave
    dragArea.addEventListener('dragleave', () => {
      dragArea.classList.remove('hover');
    });

    // Handle dropped files
    dragArea.addEventListener('drop', (event) => {
      preventDefault(event);
      dragArea.classList.remove('hover');
      const files = event.dataTransfer.files;
      handleFiles(files);
    });

    // Handle file input from drag area
    dragArea.addEventListener('click', () => {
      fileInput.click(); 
    });

    // Handle file selection from file input
    fileInput.addEventListener('change', (event) => {
      const files = event.target.files;
      handleFiles(files);
    });

    // Function to handle the files
    function handleFiles(files) {
      const formData = new FormData();
      Array.from(files).forEach((file) => {
        formData.append('file', file);
      });

      //AJAX FileUpload
      fetch('/upload', {
        method: 'POST',
        body: formData,
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Files uploaded successfully!');
          location.reload();  //relaoding page to show uploaded items
        } else {
          alert('Error uploading file!');
        }
      })
      .catch((error) => {
        console.error('Error:', error);
        alert('Error uploading files!');
      });
    }
  </script>
</body>
</html>
